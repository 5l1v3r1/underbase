!function(e){var t={};function i(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)i.d(n,o,function(t){return e[t]}.bind(null,o));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=5)}([function(e,t,i){"use strict";var n=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))(function(o,r){function s(e){try{a(n.next(e))}catch(e){r(e)}}function c(e){try{a(n.throw(e))}catch(e){r(e)}}function a(e){e.done?o(e.value):new i(function(t){t(e.value)}).then(s,c)}a((n=n.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const o=i(3);t.initMigrator=e=>n(this,void 0,void 0,function*(){return t.logger("info","Connecting to MongoDB..."),yield o.migrator.config(e),o.migrator}),t.logger=(e,...t)=>{t[0]?console.log(`[${e.toUpperCase()}]`,...t):console.log(e)},t.timer=()=>{const e=(new Date).getTime();return{spent:()=>((new Date).getTime()-e)/1e3}},t.exit=()=>{process.exit()},t.oneAtATime=e=>{const i=Array.prototype.shift,n=Array.prototype.slice;e=n.call(e);const o=i.call(e);if(o)return o().then(i=>e.length?t.oneAtATime(e):i)}},function(e,t){e.exports=require("fs-extra")},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(8);t.Migration=n.Migration;const o=new n.Migration;t.migrator=o,process.env.MIGRATE&&o.migrateTo(process.env.MIGRATE)},function(e,t){e.exports=require("esm")},function(e,t,i){"use strict";(function(e){var n,o=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))(function(o,r){function s(e){try{a(n.next(e))}catch(e){r(e)}}function c(e){try{a(n.throw(e))}catch(e){r(e)}}function a(e){e.done?o(e.value):new i(function(t){t(e.value)}).then(s,c)}a((n=n.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const r=i(1),s=i(6),c=i(7),a=i(3),l=i(0),u=i(14),d=i(15),g=i(16),f=i(17),h=i(20),p=i(21);n=i(4)(e);const y={migrate:{describe:"Initiate migration environment",callback:f.default},init:{describe:"Initiate migration environment",callback:d.default},list:{describe:"Show available migrations versions",callback:g.default},status:{describe:"Show migrations status",callback:h.default},unlock:{describe:"Unlock migrations state",callback:p.default}},m=c.scriptName("underbase").usage("Usage: $0 <command> [OPTIONS]").command("migrate <migration>",y.migrate.describe).command("init",y.init.describe).command("list",y.list.describe).command("status",y.status.describe).command("unlock",y.unlock.describe).describe("config <path>","JSON configuration file path").describe("db <url>","MongoDB connection URL").describe("migrations-dir <path>","Migrations versions directory").describe("backup","Enable automatic backups").describe("backups-dir <path>","Backups directory").describe("collection-name <name>","Migrations state collection").describe("logs","Enable logs").describe("rerun","Force migrations execution").describe("chdir <path>","Change the working directory").describe("version","Show package version").describe("mongodumpBinary <path>","Binary file for mongodump (it can be a docker exec command)").help("h","Show this help message").alias("h","help").locale("en_US").parse();let v={};const b=m.chdir||v.chdir||process.cwd();m.config&&(v=n(s.resolve(m.config)));const w={workingDirectory:b,logs:m.logs||v.logs||!0,logger:l.logger,logIfLatest:!0,collectionName:m.collectionName||v.collectionName||"migrations",db:m.db||v.db||null,backup:m.backup||v.backup||!1,backupsDir:s.resolve(s.join(b,m.backupsDir||v.backupsDir||"./migrations/backups")),migrationsDir:s.resolve(s.join(b,m.migrationsDir||v.migrationsDir||"./migrations")),mongodumpBinary:m.mongodumpBinary||v.mongodumpBinary||"mongodump"};!function(){o(this,void 0,void 0,function*(){u.checkNoArgPassed(m),u.checkMigrationDirExists(w),u.createbackupDir(w);const e=r.existsSync(w.migrationsDir)?r.readdirSync(w.migrationsDir).filter(e=>e.match(new RegExp(/^[\d].[\d]$/))):[];Object.keys(y).indexOf(m._[0])>-1?yield y[m._[0]].callback({config:w,versions:e,argv:m,migrator:a.migrator}):l.logger("info","Invalid command. Use --help to show available commands."),l.exit()})}()}).call(this,i(2)(e))},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("yargs")},function(e,t,i){"use strict";var n=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))(function(o,r){function s(e){try{a(n.next(e))}catch(e){r(e)}}function c(e){try{a(n.throw(e))}catch(e){r(e)}}function a(e){e.done?o(e.value):new i(function(t){t(e.value)}).then(s,c)}a((n=n.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const o=i(9),r=i(10),s=i(11),c=i(12),a=i(0),l=i(13),u=c.typeCheck;t.Migration=class{constructor(e){this.defaultMigration={version:0,up:()=>{}},this._list=[this.defaultMigration],this.options=e||{logs:!0,logger:null,logIfLatest:!0,collectionName:"migrations",db:null}}getConfig(){return this.options}getMigrations(){return this._list}isLocked(){return n(this,void 0,void 0,function*(){return null!==(yield this._collection.findOne({_id:"control",locked:!0}))})}config(e){return n(this,void 0,void 0,function*(){if(this.options=Object.assign({},this.options,e),!this.options.logger&&this.options.logs&&(this.options.logger=a.logger),!1===this.options.logs&&(this.options.logger=(e,...t)=>{}),!(this._db instanceof s.Db||this.options.db))throw new ReferenceError("Option.db canno't be null");let t;t="string"==typeof this.options.db?(yield s.MongoClient.connect(this.options.db,{promiseLibrary:o.Promise,useNewUrlParser:!0})).db():this.options.db,this._collection=t.collection(this.options.collectionName),this._db=t})}add(e){if("function"!=typeof e.up)throw new Error("Migration must supply an up function.");if("function"!=typeof e.down)throw new Error("Migration must supply a down function.");if("number"!=typeof e.version)throw new Error("Migration must supply a version number.");if(e.version<=0)throw new Error("Migration version must be greater than 0");Object.freeze(e),this._list.push(e),this._list=r.sortBy(this._list,e=>e.version)}migrateTo(e){return n(this,void 0,void 0,function*(){if(!this._db)throw new Error("Migration instance has not be configured/initialized. Call <instance>.config(..) to initialize this instance");if(r.isUndefined(e)||""===e||0===this.getMigrations().length)throw new Error("Cannot migrate using invalid command: "+e);let t,i;"number"==typeof e?t=e:(t=e.split(",")[0],i=e.split(",")[1]);try{"latest"===t?yield this.execute(r.last(this.getMigrations()).version):yield this.execute(parseFloat(t),"rerun"===i)}catch(e){throw this.options.logger("info","Encountered an error while migrating. Migration failed."),e}})}getNumberOfMigrations(){return this.getMigrations().length-1}getVersion(){return n(this,void 0,void 0,function*(){return(yield this.getControl()).version})}unlock(){return n(this,void 0,void 0,function*(){yield this._collection.updateOne({_id:"control"},{$set:{locked:!1}})})}reset(){return n(this,void 0,void 0,function*(){this._list=[this.defaultMigration],yield this._collection.deleteMany({})})}execute(e,t){return n(this,void 0,void 0,function*(){const i=this;let o=(yield this.getControl()).version;const r=(e,t)=>n(this,void 0,void 0,function*(){const o=i.getMigrations()[t];if("function"!=typeof o[e])throw yield s(),new Error("Cannot migrate "+e+" on version "+o.version);this.options.logger("info","Running "+e+"() on version "+o.version),o.describe&&this.options.logger(o.describe),"AsyncFunction"!==o[e].constructor.name&&"Promise"!==o[e].constructor.name&&this.options.logger("warning",`One of the ${e} functions is nor Async or Promise`,`(${o.describe||"not described"})`);const r={MongoClient:this._db,migrate:t=>n(this,void 0,void 0,function*(){for(const i in t){"AsyncFunction"!==t[i][e].constructor.name&&"Promise"!==t[i][e].constructor.name&&this.options.logger("warning",`One of the ${e} functions is nor Async or Promise`,`(${t[i].describe||"not described"})`),t[i].describe&&this.options.logger(t[i].describe);try{yield t[i][e](r)}catch(e){throw new Error(e)}}}),queryInterface:new l.QueryInterface(i._db),logger:this.options.logger};try{yield o[e](r)}catch(e){throw new Error(e)}}),s=()=>i.setControl({locked:!1,version:o}),c=()=>n(this,void 0,void 0,function*(){return yield i.setControl({locked:!0,version:o})});if(!1===(yield(()=>n(this,void 0,void 0,function*(){const e=yield i._collection.findOneAndUpdate({_id:"control",locked:!1},{$set:{locked:!0,lockedAt:new Date}});return null!=e.value&&1===e.ok}))()))return void this.options.logger("info","Not migrating, control is locked.");if(t)return this.options.logger("info","Rerunning version "+e),yield r("up",this.findIndexByVersion(e)),this.options.logger("info","Finished migrating."),void(yield s());if(o===e)return this.options.logIfLatest&&this.options.logger("info","Not migrating, already at version "+e),void(yield s());const a=this.findIndexByVersion(o),u=this.findIndexByVersion(e);if(this.options.logger("info","Migrating from version "+this.getMigrations()[a].version+" -> "+this.getMigrations()[u].version),o<e)for(let t=a;t<u;t++)try{yield r("up",t+1),o=i.getMigrations()[t+1].version,yield c()}catch(t){throw this.options.logger("error",`Encountered an error while migrating from ${o} to ${e}`),t}else for(let t=a;t>u;t--)try{yield r("down",t),o=i.getMigrations()[t-1].version,yield c()}catch(t){throw this.options.logger("error",`Encountered an error while migrating from ${o} to ${e}`),t}yield s(),this.options.logger("info","Finished migrating.")})}getControl(){return n(this,void 0,void 0,function*(){return(yield this._collection.findOne({_id:"control"}))||(yield this.setControl({version:0,locked:!1}))})}setControl(e){return n(this,void 0,void 0,function*(){u("Number",e.version),u("Boolean",e.locked);const t=yield this._collection.updateOne({_id:"control"},{$set:{version:e.version,locked:e.locked}},{upsert:!0});return t&&t.result.ok?e:null})}findIndexByVersion(e){for(let t=0;t<this.getMigrations().length;t++)if(this.getMigrations()[t].version===e)return t;throw new Error("Can't find migration version "+e)}}},function(e,t){e.exports=require("bluebird")},function(e,t){e.exports=require("lodash")},function(e,t){e.exports=require("mongodb")},function(e,t){e.exports=require("type-check")},function(e,t,i){"use strict";var n=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))(function(o,r){function s(e){try{a(n.next(e))}catch(e){r(e)}}function c(e){try{a(n.throw(e))}catch(e){r(e)}}function a(e){e.done?o(e.value):new i(function(t){t(e.value)}).then(s,c)}a((n=n.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const o=i(0);t.QueryInterface=class{constructor(e){this._db=e,this._actions=[],this.cursorOptions={cursor:{batchSize:500},allowDiskUse:!0}}collection(e){const t=this;t.collectionName=e,t._collection=t.MongoClient().collection(e);let i={},r={};const s=()=>t.cursor(r||{},e=>{t._collection.updateOne({_id:e._id},i)});return{applySchema:e=>{for(const t in e)for(const n in e[t]){switch(r=e[t][n].$where||{},i[n]={},n){case"$rename":i[n][t]=e[t][n].$value;case"$set":i[n][t]=e[t][n].$value;case"$unset":i[n][t]=1;default:i[n][t]=e[t][n]}s()}},rename:(e,t)=>{const n={};return{where:o=>(r=o||{},n[e]=t,i={$rename:n},s())}},unset:e=>{const t={};return{where:n=>{if("string"==typeof e)t[e]=1;else{if(!Array.isArray(e))throw new Error("Field name in .unset() must of type string or array.");for(const i of e)t[i]=1}return r=n||{},i={$unset:t||{}},s()}}},set:(e,t)=>{const n={};return{where:o=>(n[e]=t,r=o||{},i={$set:n||{}},s())}},destroy:e=>(r=e||{},t.cursor(r,e=>{t._collection.deleteOne({_id:e._id})})),drop:()=>{const i=new Promise((i,r)=>n(this,void 0,void 0,function*(){yield t.MongoClient().dropCollection(e,(e,t)=>i()),o.logger("info","Deleted collection "+e)}));this._actions.push(i)},update:(e,t)=>{},iterate:(e,i)=>(r=e||{},t.cursor(r,i))}}save(){return n(this,void 0,void 0,function*(){try{return Promise.all(this._actions)}catch(e){return new Error(e)}})}MongoClient(){return this._db}cursor(e,t){return n(this,void 0,void 0,function*(){const i=new Promise((i,o)=>n(this,void 0,void 0,function*(){const n=yield this._collection.aggregate([{$match:e||{}}],this.cursorOptions,null);n.on("data",e=>{t(e)}),n.on("close",()=>o("MongoDB closed the connection")),n.on("end",()=>i())}));this._actions.push(i)})}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(1),o=i(0);t.checkNoArgPassed=e=>{e._[0]||(o.logger("info","Use --help to show available commands."),o.exit())},t.checkMigrationDirExists=e=>{n.existsSync(e.migrationsDir)||o.logger("info","Migration directory does not exists. Please run underbase init.")},t.createbackupDir=e=>{!n.existsSync(e.backupsDir)&&e.backup&&(n.mkdirpSync(e.backupsDir),o.logger("info","Created backup directory."))}},function(e,t,i){"use strict";var n=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))(function(o,r){function s(e){try{a(n.next(e))}catch(e){r(e)}}function c(e){try{a(n.throw(e))}catch(e){r(e)}}function a(e){e.done?o(e.value):new i(function(t){t(e.value)}).then(s,c)}a((n=n.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const o=i(1),r=i(0);t.default=({config:e})=>n(this,void 0,void 0,function*(){o.existsSync(e.migrationsDir)?r.logger("info","Migration directory already exists."):(yield o.mkdirpSync(e.migrationsDir),r.logger("info","Created migration directory.")),!o.existsSync(e.backupsDir)&&e.backup&&(yield o.mkdirpSync(e.backupsDir),r.logger("info","Created backup directory."))})},function(e,t,i){"use strict";var n=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))(function(o,r){function s(e){try{a(n.next(e))}catch(e){r(e)}}function c(e){try{a(n.throw(e))}catch(e){r(e)}}function a(e){e.done?o(e.value):new i(function(t){t(e.value)}).then(s,c)}a((n=n.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const o=i(1),r=i(0);t.default=({config:e,versions:t})=>n(this,void 0,void 0,function*(){o.existsSync(e.migrationsDir)&&(r.logger("info","Versions list based on folders"),t.forEach(e=>console.log(`- ${e}`)))})},function(e,t,i){"use strict";(function(e){var n,o=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))(function(o,r){function s(e){try{a(n.next(e))}catch(e){r(e)}}function c(e){try{a(n.throw(e))}catch(e){r(e)}}function a(e){e.done?o(e.value):new i(function(t){t(e.value)}).then(s,c)}a((n=n.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const r=i(18),s=i(0),c=i(0);n=i(4)(e),t.default=({config:e,versions:t,argv:i})=>o(this,void 0,void 0,function*(){const a=t.map(e=>parseFloat(e));0!==i.migration&&"latest"!==i.migration&&a.indexOf(parseFloat(i.migration))<0&&(c.logger("error","This version does not exists."),c.exit()),(t=a.map(e=>e.toFixed(1))).sort((e,t)=>e-t);const l=yield s.initMigrator(e);if(t.forEach(t=>o(this,void 0,void 0,function*(){try{const i=yield n(`${e.migrationsDir}/${t}`).default;yield l.add(i)}catch(e){throw new Error(e)}})),e.backup){const t=yield l.getVersion();yield r.create(e.mongodumpBinary,t,e.backupsDir)}const u=c.timer();try{yield l.migrateTo(i.rerun?`${i.migration},rerun`:i.migration)}catch(e){throw new Error(e)}c.logger("info",`Time spent: ${u.spent()} sec`)})}).call(this,i(2)(e))},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=i(19),o=i(0);t.create=(e,t,i)=>new Promise((r,s)=>{o.logger("info","Creating backup...");const c=[t.toFixed(1),`${Date.now()}.gz`].join("_"),a=[e,"--host localhost:27017",`--archive=${i}/${c}`,"--gzip --db underbase_test"].join(" ");n.exec(a,(e,t,i)=>(e&&(o.logger("error","An error occured while creating backup... Cancelling."),console.error(e),process.exit()),o.logger("success","Backup created : "+c),r()))})},function(e,t){e.exports=require("child_process")},function(e,t,i){"use strict";var n=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))(function(o,r){function s(e){try{a(n.next(e))}catch(e){r(e)}}function c(e){try{a(n.throw(e))}catch(e){r(e)}}function a(e){e.done?o(e.value):new i(function(t){t(e.value)}).then(s,c)}a((n=n.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const o=i(0),r=i(0);t.default=({config:e,versions:t,argv:i})=>n(this,void 0,void 0,function*(){const t=yield o.initMigrator(e),i=yield t.getVersion(),n=(yield t.isLocked())?"locked":"not locked";r.logger("info",`Current version is ${i}`),r.logger("info",`Migration state is ${n}`)})},function(e,t,i){"use strict";var n=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))(function(o,r){function s(e){try{a(n.next(e))}catch(e){r(e)}}function c(e){try{a(n.throw(e))}catch(e){r(e)}}function a(e){e.done?o(e.value):new i(function(t){t(e.value)}).then(s,c)}a((n=n.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const o=i(0),r=i(0);t.default=({config:e})=>n(this,void 0,void 0,function*(){const t=yield o.initMigrator(e);if(yield t.isLocked()){const e=r.timer();yield t.unlock(),r.logger("info","Migration state unlocked."),r.logger("info",`Time spent: ${e.spent()} sec`)}else r.logger("info","Migration state is already unlocked.")})}]);