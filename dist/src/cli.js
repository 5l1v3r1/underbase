!function(i){var e={};function o(t){if(e[t])return e[t].exports;var n=e[t]={i:t,l:!1,exports:{}};return i[t].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=i,o.c=e,o.d=function(i,e,t){o.o(i,e)||Object.defineProperty(i,e,{enumerable:!0,get:t})},o.r=function(i){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(i,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(i,"__esModule",{value:!0})},o.t=function(i,e){if(1&e&&(i=o(i)),8&e)return i;if(4&e&&"object"==typeof i&&i&&i.__esModule)return i;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:i}),2&e&&"string"!=typeof i)for(var n in i)o.d(t,n,function(e){return i[e]}.bind(null,n));return t},o.n=function(i){var e=i&&i.__esModule?function(){return i.default}:function(){return i};return o.d(e,"a",e),e},o.o=function(i,e){return Object.prototype.hasOwnProperty.call(i,e)},o.p="",o(o.s=0)}([function(i,e,o){"use strict";(function(i){var t,n=this&&this.__awaiter||function(i,e,o,t){return new(o||(o=Promise))(function(n,r){function s(i){try{a(t.next(i))}catch(i){r(i)}}function c(i){try{a(t.throw(i))}catch(i){r(i)}}function a(i){i.done?n(i.value):new o(function(e){e(i.value)}).then(s,c)}a((t=t.apply(i,e||[])).next())})};Object.defineProperty(e,"__esModule",{value:!0});const r=o(2),s=o(3),c=o(4),a=o(5),l=o(6);t=o(12)(i);const d=(i,...e)=>console.log(`[${i}]`,...e),u=a.scriptName("underbase").usage("Usage: $0 <command> [OPTIONS]").command("migrate <migration>","Execute migrations").command("list","Show all migrations versions").command("status","Show migrations status").describe("db <url>","MongoDB connection URL").describe("migrations-dir <dir>","Migrations versions directory").describe("backup","Enable automatic backups").describe("backups-dir <dir>","Backups directory").describe("collection-name <name>","Migrations state collection").describe("logs","Enable logs").describe("rerun","Force migrations execution").describe("chdir <dir>","Change the working directory").describe("version","Show package version").describe("mongodumpBinary <bin>","Binary file for mongodump (it can be a docker exec command)").help("h","Show this help message").alias("h","help").locale("en_US").parse();let g={},f=u.chdir||process.cwd();u.config&&(g=t(c.resolve(c.join(f,u.config)))),g.chdir&&(f=g.chdir);const h={logs:u.logs||g.logs||!0,logger:d,logIfLatest:!0,collectionName:u.collectionName||g.collectionName||"migrations",db:u.db||g.db||null,backup:u.backup||g.backup||!1,backupsDir:c.resolve(c.join(f,u.backupsDir||g.backupsDir||"./migrations/backups")),migrationsDir:c.resolve(c.join(f,u.migrationsDir||g.migrationsDir||"./migrations")),mongodumpBinary:u.mongodumpBinary||g.mongodumpBinary||"mongodump"};(()=>n(this,void 0,void 0,function*(){u._[0]||(d("error","Invalid command. Type --help to show available commands."),process.exit()),s.existsSync(h.migrationsDir)||(s.mkdirpSync(h.migrationsDir),h.logger("info","Created migration directory.")),s.existsSync(h.backupsDir)||(s.mkdirpSync(h.backupsDir),h.logger("info","Created backup directory."));let i=s.readdirSync(h.migrationsDir).filter(i=>i.match(new RegExp(/^[\d].[\d]$/)));switch(u._[0]){case"migrate":{const e=i.map(i=>parseFloat(i));if(0!==u.migration&&e.indexOf(parseFloat(u.migration))<0&&(d("error","This version does not exists."),process.exit()),i=e.map(i=>i.toFixed(1)),yield l.migrator.config(h),i.forEach(i=>n(this,void 0,void 0,function*(){const e=yield t(`${h.migrationsDir}/${i}`).default;yield l.migrator.add(e)})),h.backup){const i=yield l.migrator.getVersion();yield(i=>new Promise((e,o)=>{d("info","Creating backup...");const t=[i.toFixed(1),`${Date.now()}.gz`].join("_"),n=[h.mongodumpBinary,"--host localhost:27017",`--archive=${h.backupsDir}/${t}`,"--gzip --db underbase_test"].join(" ");r.exec(n,(i,o,n)=>(i&&(d("error","An error occured while creating backup... Cancelling."),console.error(i),process.exit()),d("success","Backup created : "+t),e()))}))(i)}u.rerun?yield l.migrator.migrateTo(`${u.migration},rerun`):yield l.migrator.migrateTo(u.migration);break}case"list":d("info","Versions list based on folders"),i.forEach(i=>console.log(i));break;case"status":{yield l.migrator.config(h);const i=yield l.migrator.getVersion();d("info",`Current version is ${i}`);break}default:d("error","Invalid command. Type --help to show available commands.")}process.exit()}))()}).call(this,o(1)(i))},function(i,e){i.exports=function(i){return i.webpackPolyfill||(i.deprecate=function(){},i.paths=[],i.children||(i.children=[]),Object.defineProperty(i,"loaded",{enumerable:!0,get:function(){return i.l}}),Object.defineProperty(i,"id",{enumerable:!0,get:function(){return i.i}}),i.webpackPolyfill=1),i}},function(i,e){i.exports=require("child_process")},function(i,e){i.exports=require("fs-extra")},function(i,e){i.exports=require("path")},function(i,e){i.exports=require("yargs")},function(i,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const t=o(7);e.Migration=t.Migration;const n=new t.Migration;e.migrator=n,process.env.MIGRATE&&n.migrateTo(process.env.MIGRATE)},function(i,e,o){"use strict";var t=this&&this.__awaiter||function(i,e,o,t){return new(o||(o=Promise))(function(n,r){function s(i){try{a(t.next(i))}catch(i){r(i)}}function c(i){try{a(t.throw(i))}catch(i){r(i)}}function a(i){i.done?n(i.value):new o(function(e){e(i.value)}).then(s,c)}a((t=t.apply(i,e||[])).next())})};Object.defineProperty(e,"__esModule",{value:!0});const n=o(8),r=o(9),s=o(10),c=o(11).typeCheck;e.Migration=class{constructor(i){this.defaultMigration={version:0,up:()=>{}},this._list=[this.defaultMigration],this.options=i||{logs:!0,logger:null,logIfLatest:!0,collectionName:"migrations",db:null}}getConfig(){return this.options}getMigrations(){return this._list}isLocked(){return t(this,void 0,void 0,function*(){return null!==(yield this._collection.findOne({_id:"control",locked:!0}))})}config(i){return t(this,void 0,void 0,function*(){if(this.options=Object.assign({},this.options,i),!this.options.logger&&this.options.logs&&(this.options.logger=((i,...e)=>console.log(i,...e))),!1===this.options.logs&&(this.options.logger=((i,...e)=>{})),!(this._db instanceof s.Db||this.options.db))throw new ReferenceError("Option.db canno't be null");let e;e="string"==typeof this.options.db?(yield s.MongoClient.connect(this.options.db,{promiseLibrary:n.Promise,useNewUrlParser:!0})).db():this.options.db,this._collection=e.collection(this.options.collectionName),this._db=e})}add(i){if("function"!=typeof i.up)throw new Error("Migration must supply an up function.");if("function"!=typeof i.down)throw new Error("Migration must supply a down function.");if("number"!=typeof i.version)throw new Error("Migration must supply a version number.");if(i.version<=0)throw new Error("Migration version must be greater than 0");Object.freeze(i),this._list.push(i),this._list=r.sortBy(this._list,i=>i.version)}migrateTo(i){return t(this,void 0,void 0,function*(){if(!this._db)throw new Error("Migration instance has not be configured/initialized. Call <instance>.config(..) to initialize this instance");if(r.isUndefined(i)||""===i||0===this.getMigrations().length)throw new Error("Cannot migrate using invalid command: "+i);let e,o;"number"==typeof i?e=i:(e=i.split(",")[0],o=i.split(",")[1]);try{"latest"===e?yield this.execute(r.last(this.getMigrations()).version):yield this.execute(parseFloat(e),"rerun"===o)}catch(i){throw this.options.logger("info","Encountered an error while migrating. Migration failed."),i}})}getNumberOfMigrations(){return this.getMigrations().length-1}getVersion(){return t(this,void 0,void 0,function*(){return(yield this.getControl()).version})}unlock(){this._collection.updateOne({_id:"control"},{$set:{locked:!1}})}reset(){return t(this,void 0,void 0,function*(){this._list=[this.defaultMigration],yield this._collection.deleteMany({})})}execute(i,e){return t(this,void 0,void 0,function*(){const o=this;let n=(yield this.getControl()).version;const r=(i,e)=>t(this,void 0,void 0,function*(){const t=o.getMigrations()[e];if("function"!=typeof t[i])throw s(),new Error("Cannot migrate "+i+" on version "+t.version);this.options.logger("info","Running "+i+"() on version "+t.version+(t.name?" ("+t.name+")":"")),yield t[i](o._db,t)}),s=()=>o.setControl({locked:!1,version:n}),c=()=>t(this,void 0,void 0,function*(){return yield o.setControl({locked:!0,version:n})});if(!1===(yield(()=>t(this,void 0,void 0,function*(){const i=yield o._collection.findOneAndUpdate({_id:"control",locked:!1},{$set:{locked:!0,lockedAt:new Date}});return null!=i.value&&1===i.ok}))()))return void this.options.logger("info","Not migrating, control is locked.");if(e)return this.options.logger("info","Rerunning version "+i),r("up",i),this.options.logger("info","Finished migrating."),void(yield s());if(n===i)return this.options.logIfLatest&&this.options.logger("info","Not migrating, already at version "+i),void(yield s());const a=this.findIndexByVersion(n),l=this.findIndexByVersion(i);if(this.options.logger("info","Migrating from version "+this.getMigrations()[a].version+" -> "+this.getMigrations()[l].version),n<i)for(let i=a;i<l;i++)try{yield r("up",i+1),n=o.getMigrations()[i+1].version,yield c()}catch(e){throw this.options.logger("error",`Encountered an error while migrating from ${i} to ${i+1}`),e}else for(let i=a;i>l;i--)try{yield r("down",i),n=o.getMigrations()[i-1].version,yield c()}catch(e){throw this.options.logger("error",`Encountered an error while migrating from ${i} to ${i-1}`),e}yield s(),this.options.logger("info","Finished migrating.")})}getControl(){return t(this,void 0,void 0,function*(){return(yield this._collection.findOne({_id:"control"}))||(yield this.setControl({version:0,locked:!1}))})}setControl(i){return t(this,void 0,void 0,function*(){c("Number",i.version),c("Boolean",i.locked);const e=yield this._collection.updateOne({_id:"control"},{$set:{version:i.version,locked:i.locked}},{upsert:!0});return e&&e.result.ok?i:null})}findIndexByVersion(i){for(let e=0;e<this.getMigrations().length;e++)if(this.getMigrations()[e].version===i)return e;throw new Error("Can't find migration version "+i)}}},function(i,e){i.exports=require("bluebird")},function(i,e){i.exports=require("lodash")},function(i,e){i.exports=require("mongodb")},function(i,e){i.exports=require("type-check")},function(i,e){i.exports=require("esm")}]);