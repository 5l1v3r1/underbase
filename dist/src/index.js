!function(t,i){"object"==typeof exports&&"object"==typeof module?module.exports=i():"function"==typeof define&&define.amd?define([],i):"object"==typeof exports?exports.migrator=i():t.migrator=i()}(global,function(){return function(t){var i={};function o(e){if(i[e])return i[e].exports;var n=i[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,o),n.l=!0,n.exports}return o.m=t,o.c=i,o.d=function(t,i,e){o.o(t,i)||Object.defineProperty(t,i,{enumerable:!0,get:e})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,i){if(1&i&&(t=o(t)),8&i)return t;if(4&i&&"object"==typeof t&&t&&t.__esModule)return t;var e=Object.create(null);if(o.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:t}),2&i&&"string"!=typeof t)for(var n in t)o.d(e,n,function(i){return t[i]}.bind(null,n));return e},o.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(i,"a",i),i},o.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},o.p="",o(o.s=0)}([function(t,i,o){"use strict";Object.defineProperty(i,"__esModule",{value:!0});const e=o(1);i.Migration=e.Migration;const n=new e.Migration;i.migrator=n,process.env.MIGRATE&&n.migrateTo(process.env.MIGRATE)},function(t,i,o){"use strict";var e=this&&this.__awaiter||function(t,i,o,e){return new(o||(o=Promise))(function(n,r){function s(t){try{u(e.next(t))}catch(t){r(t)}}function l(t){try{u(e.throw(t))}catch(t){r(t)}}function u(t){t.done?n(t.value):new o(function(i){i(t.value)}).then(s,l)}u((e=e.apply(t,i||[])).next())})};Object.defineProperty(i,"__esModule",{value:!0});const n=o(2),r=o(3),s=o(4),l=o(5).typeCheck;i.Migration=class{constructor(t){this.defaultMigration={version:0,up:()=>{}},this._list=[this.defaultMigration],this.options=t||{logs:!0,logger:null,logIfLatest:!0,collectionName:"migrations",db:null}}getConfig(){return this.options}getMigrations(){return this._list}isLocked(){return e(this,void 0,void 0,function*(){return null!==(yield this._collection.findOne({_id:"control",locked:!0}))})}config(t){return e(this,void 0,void 0,function*(){if(this.options=Object.assign({},this.options,t),!this.options.logger&&this.options.logs&&(this.options.logger=((t,...i)=>console.log(t,...i))),!1===this.options.logs&&(this.options.logger=((t,...i)=>{})),!(this._db instanceof s.Db||this.options.db))throw new ReferenceError("Option.db canno't be null");let i;i="string"==typeof this.options.db?(yield s.MongoClient.connect(this.options.db,{promiseLibrary:n.Promise,useNewUrlParser:!0})).db():this.options.db,this._collection=i.collection(this.options.collectionName),this._db=i})}add(t){if("function"!=typeof t.up)throw new Error("Migration must supply an up function.");if("function"!=typeof t.down)throw new Error("Migration must supply a down function.");if("number"!=typeof t.version)throw new Error("Migration must supply a version number.");if(t.version<=0)throw new Error("Migration version must be greater than 0");Object.freeze(t),this._list.push(t),this._list=r.sortBy(this._list,t=>t.version)}migrateTo(t){return e(this,void 0,void 0,function*(){if(!this._db)throw new Error("Migration instance has not be configured/initialized. Call <instance>.config(..) to initialize this instance");if(r.isUndefined(t)||""===t||0===this.getMigrations().length)throw new Error("Cannot migrate using invalid command: "+t);let i,o;"number"==typeof t?i=t:(i=t.split(",")[0],o=t.split(",")[1]);try{"latest"===i?yield this.execute(r.last(this.getMigrations()).version):yield this.execute(parseFloat(i),"rerun"===o)}catch(t){throw this.options.logger("info","Encountered an error while migrating. Migration failed."),t}})}getNumberOfMigrations(){return this.getMigrations().length-1}getVersion(){return e(this,void 0,void 0,function*(){return(yield this.getControl()).version})}unlock(){this._collection.updateOne({_id:"control"},{$set:{locked:!1}})}reset(){return e(this,void 0,void 0,function*(){this._list=[this.defaultMigration],yield this._collection.deleteMany({})})}execute(t,i){return e(this,void 0,void 0,function*(){const o=this;let n=(yield this.getControl()).version;const r=(t,i)=>e(this,void 0,void 0,function*(){const e=o.getMigrations()[i];if("function"!=typeof e[t])throw s(),new Error("Cannot migrate "+t+" on version "+e.version);this.options.logger("info","Running "+t+"() on version "+e.version+(e.name?" ("+e.name+")":"")),yield e[t](o._db,e)}),s=()=>o.setControl({locked:!1,version:n}),l=()=>e(this,void 0,void 0,function*(){return yield o.setControl({locked:!0,version:n})});if(!1===(yield(()=>e(this,void 0,void 0,function*(){const t=yield o._collection.findOneAndUpdate({_id:"control",locked:!1},{$set:{locked:!0,lockedAt:new Date}});return null!=t.value&&1===t.ok}))()))return void this.options.logger("info","Not migrating, control is locked.");if(i)return this.options.logger("info","Rerunning version "+t),r("up",t),this.options.logger("info","Finished migrating."),void(yield s());if(n===t)return this.options.logIfLatest&&this.options.logger("info","Not migrating, already at version "+t),void(yield s());const u=this.findIndexByVersion(n),c=this.findIndexByVersion(t);if(this.options.logger("info","Migrating from version "+this.getMigrations()[u].version+" -> "+this.getMigrations()[c].version),n<t)for(let t=u;t<c;t++)try{yield r("up",t+1),n=o.getMigrations()[t+1].version,yield l()}catch(i){throw this.options.logger("error",`Encountered an error while migrating from ${t} to ${t+1}`),i}else for(let t=u;t>c;t--)try{yield r("down",t),n=o.getMigrations()[t-1].version,yield l()}catch(i){throw this.options.logger("error",`Encountered an error while migrating from ${t} to ${t-1}`),i}yield s(),this.options.logger("info","Finished migrating.")})}getControl(){return e(this,void 0,void 0,function*(){return(yield this._collection.findOne({_id:"control"}))||(yield this.setControl({version:0,locked:!1}))})}setControl(t){return e(this,void 0,void 0,function*(){l("Number",t.version),l("Boolean",t.locked);const i=yield this._collection.updateOne({_id:"control"},{$set:{version:t.version,locked:t.locked}},{upsert:!0});return i&&i.result.ok?t:null})}findIndexByVersion(t){for(let i=0;i<this.getMigrations().length;i++)if(this.getMigrations()[i].version===t)return i;throw new Error("Can't find migration version "+t)}}},function(t,i){t.exports=require("bluebird")},function(t,i){t.exports=require("lodash")},function(t,i){t.exports=require("mongodb")},function(t,i){t.exports=require("type-check")}])});