!function(e){var t={};function o(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=t,o.d=function(e,t,i){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(o.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(i,n,function(t){return e[t]}.bind(null,n));return i},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=5)}([function(e,t){e.exports=require("mongodb")},function(e,t){e.exports=require("bluebird")},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=o(7);t.Migration=i.Migration;const n=new i.Migration;t.migrator=n,process.env.MIGRATE&&n.migrateTo(process.env.MIGRATE)},function(e,t){e.exports=require("lodash")},function(e,t){e.exports=require("type-check")},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(6),o(11)},function(e,t,o){"use strict";var i=this&&this.__awaiter||function(e,t,o,i){return new(o||(o=Promise))(function(n,r){function s(e){try{l(i.next(e))}catch(e){r(e)}}function c(e){try{l(i.throw(e))}catch(e){r(e)}}function l(e){e.done?n(e.value):new o(function(t){t(e.value)}).then(s,c)}l((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const n=o(1),r=o(0),s=o(2);let c;const l=process.env.DBURL;describe("Migration",()=>{let e,t,d;beforeAll(()=>i(this,void 0,void 0,function*(){try{const o=yield r.MongoClient.connect(l,{useNewUrlParser:!0});c=o.db(),d={logs:!0,logIfLatest:!0,collectionName:"_migration",db:l,logger:()=>{}},e=new s.Migration(d),yield e.config(),t=[]}catch(e){throw console.log(e),e}})),beforeEach(()=>{(t=[]).push({version:0,up:()=>{}}),t.push({version:1,name:"Version 1",up:e=>"done",down:e=>"done"}),e.add(t[1]),t.push({version:2,name:"Version 2",up:e=>"done",down:e=>"done"}),e.add(t[2])}),afterEach(()=>i(this,void 0,void 0,function*(){yield e.reset()})),describe("Build",()=>{test("build file",()=>i(this,void 0,void 0,function*(){const e=o(10).migrator;expect(e).toHaveProperty("defaultMigration"),expect(e).toHaveProperty("_list"),expect(e).toHaveProperty("options")}))}),describe("#migrateTo",()=>{test("1 from 0, should migrate to v1",()=>i(this,void 0,void 0,function*(){let t=yield e.getVersion();expect(t).toBe(0),yield e.migrateTo(1),t=yield e.getVersion(),expect(t).toBe(1)})),test("2 from 0, should migrate to v2",()=>i(this,void 0,void 0,function*(){let t=yield e.getVersion();expect(t).toBe(0),yield e.migrateTo(2),t=yield e.getVersion(),expect(t).toBe(2)})),test("'latest' from 0, should migrate to v2",()=>i(this,void 0,void 0,function*(){let t=yield e.getVersion();expect(t).toBe(0),yield e.migrateTo("latest"),t=yield e.getVersion(),expect(t).toBe(2)})),test("from 2 to 1, should migrate to v1",()=>i(this,void 0,void 0,function*(){yield e.migrateTo("2");let t=yield e.getVersion();expect(t).toBe(2),yield e.migrateTo(1),t=yield e.getVersion(),expect(t).toBe(1)})),test("from 2 to 0, should migrate to v0",()=>i(this,void 0,void 0,function*(){yield e.migrateTo("2");let t=yield e.getVersion();expect(t).toBe(2),yield e.migrateTo(0),t=yield e.getVersion(),expect(t).toBe(0)})),test("rerun 0 to 0, should migrate to v0",()=>i(this,void 0,void 0,function*(){let t=yield e.getVersion();expect(t).toBe(0),yield e.migrateTo("0,rerun"),t=yield e.getVersion(),expect(t).toBe(0)})),describe("With async(async/await and Promise) up() & down()",()=>{beforeEach(()=>{e.add({version:3,name:"Version 3.",up:e=>i(this,void 0,void 0,function*(){return"done"}),down:e=>i(this,void 0,void 0,function*(){return"done"})}),e.add({version:4,name:"Version 4",up:n.Promise.method(e=>"done"),down:n.Promise.method(e=>"done")})}),test("from 0 to 3, should migrate to v3",()=>i(this,void 0,void 0,function*(){let t=yield e.getVersion();expect(t).toBe(0),yield e.migrateTo(3),t=yield e.getVersion(),expect(t).toBe(3)})),test("from 0 to 4, should migrate to v4",()=>i(this,void 0,void 0,function*(){let t=yield e.getVersion();expect(t).toBe(0),yield e.migrateTo("4.0"),t=yield e.getVersion(),expect(t).toBe(4)}))}),describe("On Error",()=>{beforeEach(()=>{e.add({version:3,name:"Version 3.",up:e=>i(this,void 0,void 0,function*(){}),down:e=>i(this,void 0,void 0,function*(){})}),e.add({version:4,name:"Version 4.",up:e=>i(this,void 0,void 0,function*(){}),down:e=>i(this,void 0,void 0,function*(){throw new Error("Something went wrong")})}),e.add({version:5,name:"Version 5.",up:e=>i(this,void 0,void 0,function*(){throw new Error("Something went wrong")}),down:e=>i(this,void 0,void 0,function*(){})})}),test("from 0 to 5, should stop migration at v4 due to error from v4 to v5",()=>i(this,void 0,void 0,function*(){let t=yield e.getVersion();expect(t).toBe(0);try{yield e.migrateTo(5)}catch(e){expect(e).toBeTruthy(),expect(e).toBeInstanceOf(Error)}t=yield e.getVersion(),expect(t).toBe(4)})),test("from 4 to 3, should stop migration at 4 due to error from v4 to v3",()=>i(this,void 0,void 0,function*(){yield e.migrateTo(4);let t=yield e.getVersion();expect(t).toBe(4);try{yield e.migrateTo(3)}catch(e){expect(e).toBeTruthy(),expect(e).toBeInstanceOf(Error)}t=yield e.getVersion(),expect(t).toBe(4)}))})}),describe("#isLocked",()=>{test("should be unlocked",()=>i(this,void 0,void 0,function*(){const t=yield e.isLocked();expect(t).toBe(!1)})),test("should be locked",()=>i(this,void 0,void 0,function*(){yield c.collection("_migration").updateOne({_id:"control"},{$set:{version:1,locked:!0}},{upsert:!0});const t=yield e.isLocked();expect(t).toBe(!0)}))}),describe("#getConfig",()=>{test("should return config objet",()=>{const t=e.getConfig();expect(t).toMatchObject(d)})}),describe("#getMigrations",()=>{test("should return migrations array",()=>{e.getMigrations().forEach(e=>{expect(e).toHaveProperty("version"),expect(e).toHaveProperty("up"),0!==e.version&&(expect(e).toHaveProperty("name"),expect(e).toHaveProperty("down"))})})})})},function(e,t,o){"use strict";var i=this&&this.__awaiter||function(e,t,o,i){return new(o||(o=Promise))(function(n,r){function s(e){try{l(i.next(e))}catch(e){r(e)}}function c(e){try{l(i.throw(e))}catch(e){r(e)}}function l(e){e.done?n(e.value):new o(function(t){t(e.value)}).then(s,c)}l((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const n=o(1),r=o(3),s=o(0),c=o(4),l=o(8),d=c.typeCheck;t.Migration=class{constructor(e){this.defaultMigration={version:0,up:()=>{}},this._list=[this.defaultMigration],this.options=e||{logs:!0,logger:null,logIfLatest:!0,collectionName:"migrations",db:null}}getConfig(){return this.options}getMigrations(){return this._list}isLocked(){return i(this,void 0,void 0,function*(){return null!==(yield this._collection.findOne({_id:"control",locked:!0}))})}config(e){return i(this,void 0,void 0,function*(){if(this.options=Object.assign({},this.options,e),!this.options.logger&&this.options.logs&&(this.options.logger=((e,...t)=>console.log(e,...t))),!1===this.options.logs&&(this.options.logger=((e,...t)=>{})),!(this._db instanceof s.Db||this.options.db))throw new ReferenceError("Option.db canno't be null");let t;t="string"==typeof this.options.db?(yield s.MongoClient.connect(this.options.db,{promiseLibrary:n.Promise,useNewUrlParser:!0})).db():this.options.db,this._collection=t.collection(this.options.collectionName),this._db=t})}add(e){if("function"!=typeof e.up)throw new Error("Migration must supply an up function.");if("function"!=typeof e.down)throw new Error("Migration must supply a down function.");if("number"!=typeof e.version)throw new Error("Migration must supply a version number.");if(e.version<=0)throw new Error("Migration version must be greater than 0");Object.freeze(e),this._list.push(e),this._list=r.sortBy(this._list,e=>e.version)}migrateTo(e){return i(this,void 0,void 0,function*(){if(!this._db)throw new Error("Migration instance has not be configured/initialized. Call <instance>.config(..) to initialize this instance");if(r.isUndefined(e)||""===e||0===this.getMigrations().length)throw new Error("Cannot migrate using invalid command: "+e);let t,o;"number"==typeof e?t=e:(t=e.split(",")[0],o=e.split(",")[1]);try{"latest"===t?yield this.execute(r.last(this.getMigrations()).version):yield this.execute(parseFloat(t),"rerun"===o)}catch(e){throw this.options.logger("info","Encountered an error while migrating. Migration failed."),e}})}getNumberOfMigrations(){return this.getMigrations().length-1}getVersion(){return i(this,void 0,void 0,function*(){return(yield this.getControl()).version})}unlock(){return i(this,void 0,void 0,function*(){yield this._collection.updateOne({_id:"control"},{$set:{locked:!1}})})}reset(){return i(this,void 0,void 0,function*(){this._list=[this.defaultMigration],yield this._collection.deleteMany({})})}execute(e,t){return i(this,void 0,void 0,function*(){const o=this;let n=(yield this.getControl()).version;const r=(e,t)=>i(this,void 0,void 0,function*(){const i=o.getMigrations()[t];if("function"!=typeof i[e])throw yield s(),new Error("Cannot migrate "+e+" on version "+i.version);this.options.logger("info","Running "+e+"() on version "+i.version+(i.name?" ("+i.name+")":"")),yield i[e](new l.MongoInterface(o._db))}),s=()=>o.setControl({locked:!1,version:n}),c=()=>i(this,void 0,void 0,function*(){return yield o.setControl({locked:!0,version:n})});if(!1===(yield(()=>i(this,void 0,void 0,function*(){const e=yield o._collection.findOneAndUpdate({_id:"control",locked:!1},{$set:{locked:!0,lockedAt:new Date}});return null!=e.value&&1===e.ok}))()))return void this.options.logger("info","Not migrating, control is locked.");if(t)return this.options.logger("info","Rerunning version "+e),yield r("up",e),this.options.logger("info","Finished migrating."),void(yield s());if(n===e)return this.options.logIfLatest&&this.options.logger("info","Not migrating, already at version "+e),void(yield s());const d=this.findIndexByVersion(n),u=this.findIndexByVersion(e);if(this.options.logger("info","Migrating from version "+this.getMigrations()[d].version+" -> "+this.getMigrations()[u].version),n<e)for(let e=d;e<u;e++)try{yield r("up",e+1),n=o.getMigrations()[e+1].version,yield c()}catch(t){throw this.options.logger("error",`Encountered an error while migrating from ${e} to ${e+1}`),t}else for(let e=d;e>u;e--)try{yield r("down",e),n=o.getMigrations()[e-1].version,yield c()}catch(t){throw this.options.logger("error",`Encountered an error while migrating from ${e} to ${e-1}`),t}yield s(),this.options.logger("info","Finished migrating.")})}getControl(){return i(this,void 0,void 0,function*(){return(yield this._collection.findOne({_id:"control"}))||(yield this.setControl({version:0,locked:!1}))})}setControl(e){return i(this,void 0,void 0,function*(){d("Number",e.version),d("Boolean",e.locked);const t=yield this._collection.updateOne({_id:"control"},{$set:{version:e.version,locked:e.locked}},{upsert:!0});return t&&t.result.ok?e:null})}findIndexByVersion(e){for(let t=0;t<this.getMigrations().length;t++)if(this.getMigrations()[t].version===e)return t;throw new Error("Can't find migration version "+e)}}},function(e,t,o){"use strict";var i=this&&this.__awaiter||function(e,t,o,i){return new(o||(o=Promise))(function(n,r){function s(e){try{l(i.next(e))}catch(e){r(e)}}function c(e){try{l(i.throw(e))}catch(e){r(e)}}function l(e){e.done?n(e.value):new o(function(t){t(e.value)}).then(s,c)}l((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const n=o(9);t.MongoInterface=class{constructor(e){this._db=e,this._actions=[],this.cursorOptions={cursor:{batchSize:500},allowDiskUse:!0}}getDb(){return this._db}collection(e){const t=this;t.collectionName=e,t._collection=t.getDb().collection(e);let o={},r={};const s=()=>t.cursor(r||{},e=>{t._collection.updateOne({_id:e._id},o)});return{applySchema:e=>{for(const t in e)for(const i in e[t]){switch(r=e[t][i].$where||{},o[i]={},i){case"$rename":o[i][t]=e[t][i].$value;case"$set":o[i][t]=e[t][i].$value;case"$unset":o[i][t]=1;default:o[i][t]=e[t][i]}s()}},rename:(e,t)=>{const i={};return{where:n=>(r=n||{},i[e]=t,o={$rename:i},s())}},unset:e=>{const t={};return{where:i=>{if("string"==typeof e)t[e]=1;else{if(!Array.isArray(e))throw new Error("Field name in .unset() must of type string or array.");for(const o of e)t[o]=1}return r=i||{},o={$unset:t||{}},s()}}},set:(e,t)=>{const i={};return{where:n=>(i[e]=t,r=n||{},o={$set:i||{}},s())}},remove:()=>({where:e=>(r=e||{},t.cursor(r,e=>{t._collection.deleteOne({_id:e._id})}))}),drop:()=>{const o=new Promise((o,r)=>i(this,void 0,void 0,function*(){yield t.getDb().dropCollection(e,(e,t)=>o()),n.logger("info","Deleted collection "+e)}));this._actions.push(o)},iterate:(e,o)=>(r=e||{},t.cursor(r,o))}}save(){return i(this,void 0,void 0,function*(){try{return Promise.all(this._actions)}catch(e){return new Error(e)}})}cursor(e,t){return i(this,void 0,void 0,function*(){const o=new Promise((o,n)=>i(this,void 0,void 0,function*(){const i=yield this._collection.aggregate([{$match:e||{}}],this.cursorOptions,null);i.on("data",e=>{t(e)}),i.on("close",()=>n("MongoDB closed the connection")),i.on("end",()=>o())}));this._actions.push(o)})}}},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.logger=((e,...t)=>console.log(`[${e}]`,...t))},function(e,t,o){global,e.exports=function(e){var t={};function o(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,o),n.l=!0,n.exports}return o.m=e,o.c=t,o.d=function(e,t,i){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(o.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(i,n,function(t){return e[t]}.bind(null,n));return i},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=o(1);t.Migration=i.Migration;const n=new i.Migration;t.migrator=n,process.env.MIGRATE&&n.migrateTo(process.env.MIGRATE)},function(e,t,o){"use strict";var i=this&&this.__awaiter||function(e,t,o,i){return new(o||(o=Promise))(function(n,r){function s(e){try{l(i.next(e))}catch(e){r(e)}}function c(e){try{l(i.throw(e))}catch(e){r(e)}}function l(e){e.done?n(e.value):new o(function(t){t(e.value)}).then(s,c)}l((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const n=o(2),r=o(3),s=o(4),c=o(5),l=o(6),d=c.typeCheck;t.Migration=class{constructor(e){this.defaultMigration={version:0,up:()=>{}},this._list=[this.defaultMigration],this.options=e||{logs:!0,logger:null,logIfLatest:!0,collectionName:"migrations",db:null}}getConfig(){return this.options}getMigrations(){return this._list}isLocked(){return i(this,void 0,void 0,function*(){return null!==(yield this._collection.findOne({_id:"control",locked:!0}))})}config(e){return i(this,void 0,void 0,function*(){if(this.options=Object.assign({},this.options,e),!this.options.logger&&this.options.logs&&(this.options.logger=((e,...t)=>console.log(e,...t))),!1===this.options.logs&&(this.options.logger=((e,...t)=>{})),!(this._db instanceof s.Db||this.options.db))throw new ReferenceError("Option.db canno't be null");let t;t="string"==typeof this.options.db?(yield s.MongoClient.connect(this.options.db,{promiseLibrary:n.Promise,useNewUrlParser:!0})).db():this.options.db,this._collection=t.collection(this.options.collectionName),this._db=t})}add(e){if("function"!=typeof e.up)throw new Error("Migration must supply an up function.");if("function"!=typeof e.down)throw new Error("Migration must supply a down function.");if("number"!=typeof e.version)throw new Error("Migration must supply a version number.");if(e.version<=0)throw new Error("Migration version must be greater than 0");Object.freeze(e),this._list.push(e),this._list=r.sortBy(this._list,e=>e.version)}migrateTo(e){return i(this,void 0,void 0,function*(){if(!this._db)throw new Error("Migration instance has not be configured/initialized. Call <instance>.config(..) to initialize this instance");if(r.isUndefined(e)||""===e||0===this.getMigrations().length)throw new Error("Cannot migrate using invalid command: "+e);let t,o;"number"==typeof e?t=e:(t=e.split(",")[0],o=e.split(",")[1]);try{"latest"===t?yield this.execute(r.last(this.getMigrations()).version):yield this.execute(parseFloat(t),"rerun"===o)}catch(e){throw this.options.logger("info","Encountered an error while migrating. Migration failed."),e}})}getNumberOfMigrations(){return this.getMigrations().length-1}getVersion(){return i(this,void 0,void 0,function*(){return(yield this.getControl()).version})}unlock(){return i(this,void 0,void 0,function*(){yield this._collection.updateOne({_id:"control"},{$set:{locked:!1}})})}reset(){return i(this,void 0,void 0,function*(){this._list=[this.defaultMigration],yield this._collection.deleteMany({})})}execute(e,t){return i(this,void 0,void 0,function*(){const o=this;let n=(yield this.getControl()).version;const r=(e,t)=>i(this,void 0,void 0,function*(){const i=o.getMigrations()[t];if("function"!=typeof i[e])throw yield s(),new Error("Cannot migrate "+e+" on version "+i.version);this.options.logger("info","Running "+e+"() on version "+i.version+(i.name?" ("+i.name+")":"")),yield i[e](new l.MongoInterface(o._db))}),s=()=>o.setControl({locked:!1,version:n}),c=()=>i(this,void 0,void 0,function*(){return yield o.setControl({locked:!0,version:n})});if(!1===(yield(()=>i(this,void 0,void 0,function*(){const e=yield o._collection.findOneAndUpdate({_id:"control",locked:!1},{$set:{locked:!0,lockedAt:new Date}});return null!=e.value&&1===e.ok}))()))return void this.options.logger("info","Not migrating, control is locked.");if(t)return this.options.logger("info","Rerunning version "+e),yield r("up",e),this.options.logger("info","Finished migrating."),void(yield s());if(n===e)return this.options.logIfLatest&&this.options.logger("info","Not migrating, already at version "+e),void(yield s());const d=this.findIndexByVersion(n),u=this.findIndexByVersion(e);if(this.options.logger("info","Migrating from version "+this.getMigrations()[d].version+" -> "+this.getMigrations()[u].version),n<e)for(let e=d;e<u;e++)try{yield r("up",e+1),n=o.getMigrations()[e+1].version,yield c()}catch(t){throw this.options.logger("error",`Encountered an error while migrating from ${e} to ${e+1}`),t}else for(let e=d;e>u;e--)try{yield r("down",e),n=o.getMigrations()[e-1].version,yield c()}catch(t){throw this.options.logger("error",`Encountered an error while migrating from ${e} to ${e-1}`),t}yield s(),this.options.logger("info","Finished migrating.")})}getControl(){return i(this,void 0,void 0,function*(){return(yield this._collection.findOne({_id:"control"}))||(yield this.setControl({version:0,locked:!1}))})}setControl(e){return i(this,void 0,void 0,function*(){d("Number",e.version),d("Boolean",e.locked);const t=yield this._collection.updateOne({_id:"control"},{$set:{version:e.version,locked:e.locked}},{upsert:!0});return t&&t.result.ok?e:null})}findIndexByVersion(e){for(let t=0;t<this.getMigrations().length;t++)if(this.getMigrations()[t].version===e)return t;throw new Error("Can't find migration version "+e)}}},function(e,t){e.exports=o(1)},function(e,t){e.exports=o(3)},function(e,t){e.exports=o(0)},function(e,t){e.exports=o(4)},function(e,t,o){"use strict";var i=this&&this.__awaiter||function(e,t,o,i){return new(o||(o=Promise))(function(n,r){function s(e){try{l(i.next(e))}catch(e){r(e)}}function c(e){try{l(i.throw(e))}catch(e){r(e)}}function l(e){e.done?n(e.value):new o(function(t){t(e.value)}).then(s,c)}l((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const n=o(7);t.MongoInterface=class{constructor(e){this._db=e,this._actions=[],this.cursorOptions={cursor:{batchSize:500},allowDiskUse:!0}}getDb(){return this._db}collection(e){const t=this;t.collectionName=e,t._collection=t.getDb().collection(e);let o={},r={};const s=()=>t.cursor(r||{},e=>{t._collection.updateOne({_id:e._id},o)});return{applySchema:e=>{for(const t in e)for(const i in e[t]){switch(r=e[t][i].$where||{},o[i]={},i){case"$rename":o[i][t]=e[t][i].$value;case"$set":o[i][t]=e[t][i].$value;case"$unset":o[i][t]=1;default:o[i][t]=e[t][i]}s()}},rename:(e,t)=>{const i={};return{where:n=>(r=n||{},i[e]=t,o={$rename:i},s())}},unset:e=>{const t={};return{where:i=>{if("string"==typeof e)t[e]=1;else{if(!Array.isArray(e))throw new Error("Field name in .unset() must of type string or array.");for(const o of e)t[o]=1}return r=i||{},o={$unset:t||{}},s()}}},set:(e,t)=>{const i={};return{where:n=>(i[e]=t,r=n||{},o={$set:i||{}},s())}},remove:()=>({where:e=>(r=e||{},t.cursor(r,e=>{t._collection.deleteOne({_id:e._id})}))}),drop:()=>{const o=new Promise((o,r)=>i(this,void 0,void 0,function*(){yield t.getDb().dropCollection(e,(e,t)=>o()),n.logger("info","Deleted collection "+e)}));this._actions.push(o)},iterate:(e,o)=>(r=e||{},t.cursor(r,o))}}save(){return i(this,void 0,void 0,function*(){try{return Promise.all(this._actions)}catch(e){return new Error(e)}})}cursor(e,t){return i(this,void 0,void 0,function*(){const o=new Promise((o,n)=>i(this,void 0,void 0,function*(){const i=yield this._collection.aggregate([{$match:e||{}}],this.cursorOptions,null);i.on("data",e=>{t(e)}),i.on("close",()=>n("MongoDB closed the connection")),i.on("end",()=>o())}));this._actions.push(o)})}}},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.logger=((e,...t)=>console.log(`[${e}]`,...t))}])},function(e,t,o){"use strict";var i=this&&this.__awaiter||function(e,t,o,i){return new(o||(o=Promise))(function(n,r){function s(e){try{l(i.next(e))}catch(e){r(e)}}function c(e){try{l(i.throw(e))}catch(e){r(e)}}function l(e){e.done?n(e.value):new o(function(t){t(e.value)}).then(s,c)}l((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const n=o(0),r=o(2);let s;const c=process.env.DBURL;describe("Query interface",()=>{let e,t,o;beforeAll(()=>i(this,void 0,void 0,function*(){try{const i=yield n.MongoClient.connect(c,{useNewUrlParser:!0});s=i.db(),o={logs:!0,logIfLatest:!0,collectionName:"_migration",db:c,logger:()=>{}},e=new r.Migration(o),yield e.config(),t=[]}catch(e){throw console.log(e),e}})),beforeEach(()=>{(t=[]).push({version:0,up:()=>{}}),t.push({version:1,name:"Version 1.",up:e=>i(this,void 0,void 0,function*(){return e.collection("users").rename("dateCreated","datecreated").where({}),yield e.save(),"done."}),down:e=>i(this,void 0,void 0,function*(){})}),e.add(t[1]),t.push({version:2,name:"Version 2.",up:e=>i(this,void 0,void 0,function*(){return e.collection("users").rename("dateCreated","datecreated").where({}),yield e.save(),"done."}),down:e=>i(this,void 0,void 0,function*(){})}),e.add(t[2])}),afterEach(()=>i(this,void 0,void 0,function*(){yield e.reset()})),describe("Unset",()=>{test("should unset",()=>i(this,void 0,void 0,function*(){expect(1).toBeGreaterThan(0)}))}),describe("Rename",()=>{test("should rename",()=>{expect(1).toBeGreaterThan(0)})})})}]);