!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.migrator=e():t.migrator=e()}(global,function(){return function(t){var e={};function o(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,o),n.l=!0,n.exports}return o.m=t,o.c=e,o.d=function(t,e,i){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(o.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)o.d(i,n,function(e){return t[e]}.bind(null,n));return i},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=0)}([function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=o(1);e.Migration=i.Migration;const n=new i.Migration;e.migrator=n,process.env.MIGRATE&&n.migrateTo(process.env.MIGRATE)},function(t,e,o){"use strict";var i=this&&this.__awaiter||function(t,e,o,i){return new(o||(o=Promise))(function(n,r){function s(t){try{c(i.next(t))}catch(t){r(t)}}function l(t){try{c(i.throw(t))}catch(t){r(t)}}function c(t){t.done?n(t.value):new o(function(e){e(t.value)}).then(s,l)}c((i=i.apply(t,e||[])).next())})};Object.defineProperty(e,"__esModule",{value:!0});const n=o(2),r=o(3),s=o(4),l=o(5),c=o(6),u=l.typeCheck;e.Migration=class{constructor(t){this.defaultMigration={version:0,up:()=>{}},this._list=[this.defaultMigration],this.options=t||{logs:!0,logger:null,logIfLatest:!0,collectionName:"migrations",db:null}}getConfig(){return this.options}getMigrations(){return this._list}isLocked(){return i(this,void 0,void 0,function*(){return null!==(yield this._collection.findOne({_id:"control",locked:!0}))})}config(t){return i(this,void 0,void 0,function*(){if(this.options=Object.assign({},this.options,t),!this.options.logger&&this.options.logs&&(this.options.logger=(t,...e)=>console.log(t,...e)),!1===this.options.logs&&(this.options.logger=(t,...e)=>{}),!(this._db instanceof s.Db||this.options.db))throw new ReferenceError("Option.db canno't be null");let e;e="string"==typeof this.options.db?(yield s.MongoClient.connect(this.options.db,{promiseLibrary:n.Promise,useNewUrlParser:!0})).db():this.options.db,this._collection=e.collection(this.options.collectionName),this._db=e})}add(t){if("function"!=typeof t.up)throw new Error("Migration must supply an up function.");if("function"!=typeof t.down)throw new Error("Migration must supply a down function.");if("number"!=typeof t.version)throw new Error("Migration must supply a version number.");if(t.version<=0)throw new Error("Migration version must be greater than 0");Object.freeze(t),this._list.push(t),this._list=r.sortBy(this._list,t=>t.version)}migrateTo(t){return i(this,void 0,void 0,function*(){if(!this._db)throw new Error("Migration instance has not be configured/initialized. Call <instance>.config(..) to initialize this instance");if(r.isUndefined(t)||""===t||0===this.getMigrations().length)throw new Error("Cannot migrate using invalid command: "+t);let e,o;"number"==typeof t?e=t:(e=t.split(",")[0],o=t.split(",")[1]);try{"latest"===e?yield this.execute(r.last(this.getMigrations()).version):yield this.execute(parseFloat(e),"rerun"===o)}catch(t){throw this.options.logger("info","Encountered an error while migrating. Migration failed."),t}})}getNumberOfMigrations(){return this.getMigrations().length-1}getVersion(){return i(this,void 0,void 0,function*(){return(yield this.getControl()).version})}unlock(){return i(this,void 0,void 0,function*(){yield this._collection.updateOne({_id:"control"},{$set:{locked:!1}})})}reset(){return i(this,void 0,void 0,function*(){this._list=[this.defaultMigration],yield this._collection.deleteMany({})})}execute(t,e){return i(this,void 0,void 0,function*(){const o=this;let n=(yield this.getControl()).version;const r=(t,e)=>i(this,void 0,void 0,function*(){const i=o.getMigrations()[e];if("function"!=typeof i[t])throw yield s(),new Error("Cannot migrate "+t+" on version "+i.version);this.options.logger("info","Running "+t+"() on version "+i.version+(i.name?" ("+i.name+")":"")),yield i[t](new c.MongoInterface(o._db))}),s=()=>o.setControl({locked:!1,version:n}),l=()=>i(this,void 0,void 0,function*(){return yield o.setControl({locked:!0,version:n})});if(!1===(yield(()=>i(this,void 0,void 0,function*(){const t=yield o._collection.findOneAndUpdate({_id:"control",locked:!1},{$set:{locked:!0,lockedAt:new Date}});return null!=t.value&&1===t.ok}))()))return void this.options.logger("info","Not migrating, control is locked.");if(e)return this.options.logger("info","Rerunning version "+t),yield r("up",t),this.options.logger("info","Finished migrating."),void(yield s());if(n===t)return this.options.logIfLatest&&this.options.logger("info","Not migrating, already at version "+t),void(yield s());const u=this.findIndexByVersion(n),d=this.findIndexByVersion(t);if(this.options.logger("info","Migrating from version "+this.getMigrations()[u].version+" -> "+this.getMigrations()[d].version),n<t)for(let t=u;t<d;t++)try{yield r("up",t+1),n=o.getMigrations()[t+1].version,yield l()}catch(e){throw this.options.logger("error",`Encountered an error while migrating from ${t} to ${t+1}`),e}else for(let t=u;t>d;t--)try{yield r("down",t),n=o.getMigrations()[t-1].version,yield l()}catch(e){throw this.options.logger("error",`Encountered an error while migrating from ${t} to ${t-1}`),e}yield s(),this.options.logger("info","Finished migrating.")})}getControl(){return i(this,void 0,void 0,function*(){return(yield this._collection.findOne({_id:"control"}))||(yield this.setControl({version:0,locked:!1}))})}setControl(t){return i(this,void 0,void 0,function*(){u("Number",t.version),u("Boolean",t.locked);const e=yield this._collection.updateOne({_id:"control"},{$set:{version:t.version,locked:t.locked}},{upsert:!0});return e&&e.result.ok?t:null})}findIndexByVersion(t){for(let e=0;e<this.getMigrations().length;e++)if(this.getMigrations()[e].version===t)return e;throw new Error("Can't find migration version "+t)}}},function(t,e){t.exports=require("bluebird")},function(t,e){t.exports=require("lodash")},function(t,e){t.exports=require("mongodb")},function(t,e){t.exports=require("type-check")},function(t,e,o){"use strict";var i=this&&this.__awaiter||function(t,e,o,i){return new(o||(o=Promise))(function(n,r){function s(t){try{c(i.next(t))}catch(t){r(t)}}function l(t){try{c(i.throw(t))}catch(t){r(t)}}function c(t){t.done?n(t.value):new o(function(e){e(t.value)}).then(s,l)}c((i=i.apply(t,e||[])).next())})};Object.defineProperty(e,"__esModule",{value:!0});const n=o(7);e.MongoInterface=class{constructor(t){this._db=t,this._actions=[],this.cursorOptions={cursor:{batchSize:500},allowDiskUse:!0}}MongoClient(){return this._db}collection(t){const e=this;e.collectionName=t,e._collection=e.MongoClient().collection(t);let o={},r={};const s=()=>e.cursor(r||{},t=>{e._collection.updateOne({_id:t._id},o)});return{applySchema:t=>{for(const e in t)for(const i in t[e]){switch(r=t[e][i].$where||{},o[i]={},i){case"$rename":o[i][e]=t[e][i].$value;case"$set":o[i][e]=t[e][i].$value;case"$unset":o[i][e]=1;default:o[i][e]=t[e][i]}s()}},rename:(t,e)=>{const i={};return{where:n=>(r=n||{},i[t]=e,o={$rename:i},s())}},unset:t=>{const e={};return{where:i=>{if("string"==typeof t)e[t]=1;else{if(!Array.isArray(t))throw new Error("Field name in .unset() must of type string or array.");for(const o of t)e[o]=1}return r=i||{},o={$unset:e||{}},s()}}},set:(t,e)=>{const i={};return{where:n=>(i[t]=e,r=n||{},o={$set:i||{}},s())}},destroy:t=>(r=t||{},e.cursor(r,t=>{e._collection.deleteOne({_id:t._id})})),drop:()=>{const o=new Promise((o,r)=>i(this,void 0,void 0,function*(){yield e.MongoClient().dropCollection(t,(t,e)=>o()),n.logger("info","Deleted collection "+t)}));this._actions.push(o)},update:(t,e)=>{},iterate:(t,o)=>(r=t||{},e.cursor(r,o))}}save(){return i(this,void 0,void 0,function*(){try{return Promise.all(this._actions)}catch(t){return new Error(t)}})}cursor(t,e){return i(this,void 0,void 0,function*(){const o=new Promise((o,n)=>i(this,void 0,void 0,function*(){const i=yield this._collection.aggregate([{$match:t||{}}],this.cursorOptions,null);i.on("data",t=>{e(t)}),i.on("close",()=>n("MongoDB closed the connection")),i.on("end",()=>o())}));this._actions.push(o)})}}},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.logger=(t,...e)=>console.log(`[${t.toUpperCase()}]`,...e),e.timer=()=>{const t=(new Date).getTime();return{spent:()=>((new Date).getTime()-t)/1e3}}}])});